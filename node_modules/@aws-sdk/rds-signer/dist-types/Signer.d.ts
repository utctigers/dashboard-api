import { AwsCredentialIdentity, AwsCredentialIdentityProvider, ChecksumConstructor, HashConstructor } from "@smithy/types";
export interface SignerConfig {
    /**
     * The AWS credentials to sign requests with.
     * Uses the default credential provider chain if not specified.
     */
    credentials?: AwsCredentialIdentity | AwsCredentialIdentityProvider;
    /**
     * The hostname of the database to connect to.
     */
    hostname: string;
    /**
     * The port number the database is listening on.
     */
    port: number;
    /**
     * The region the database is located in.
     * Uses the region of the given profile or inferred from the runtime if
     * both are omitted.
     */
    region?: string;
    /**
     * The SHA256 hasher constructor to sign the request.
     */
    sha256?: ChecksumConstructor | HashConstructor;
    /**
     * The username to login as.
     */
    username: string;
    /**
     * Optional. Can be provided to configure region from a profile
     * if operating in an environment with a file system having
     * an AWS configuration file.
     *
     * The credentials will also resolve based on this profile, if using
     * a credentials provider that includes the AWS configuration file.
     */
    profile?: string;
}
/**
 * The signer class that generates an auth token to a database.
 */
export declare class Signer {
    private readonly credentials;
    private readonly hostname;
    private readonly port;
    private readonly protocol;
    private readonly region;
    private readonly service;
    private readonly sha256;
    private readonly username;
    constructor(configuration: SignerConfig);
    getAuthToken(): Promise<string>;
}
